{"version":3,"sources":["Context.js","components/Contact/Contact.js","components/Contact/Contacts.js","components/Layout/Header/Header.js","components/Layout/TextInputGroup/TextInputGroup.js","components/Contact/AddContact.js","components/Pages/About/About.js","components/Pages/NotFound/NotFound.js","components/test/test.js","components/Contact/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","dispatch","_this","setState","axios","get","response","this","data","react_default","a","createElement","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","_callee","regenerator_default","wrap","_context","prev","next","delete","t0","stop","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","components_Contact_Contact","key","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classNames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","sent","history","push","_this$state2","Layout_TextInputGroup_TextInputGroup","About","NotFound","Test","title","body","fetch","then","json","EditContact","updateContact","match","params","put","App","src_Context","HashRouter","Layout_Header_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e262e51.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload ? (contact = action.payload) : contact)\n            };\n            default:\n              return state;\n    }\n}\n\nclass Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => this.setState( state => reducer(state,action))   \n    }\n\n    async componentDidMount() {\n        const response = await axios.get('http://jsonplaceholder.typicode.com/users');\n        this.setState({contacts: response.data});\n        \n    }\n\n  render() {\n    return (\n        <Context.Provider value={this.state}>\n            {this.props.children}\n        </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;\n\nexport default Provider;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../Context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n\n    state = {\n        showContactInfo: false,\n    }\n\n    onDeleteClick = async (id, dispatch) => {\n        try {\n            await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\n            dispatch({ type: 'DELETE_CONTACT', payload: id })\n        }\n        catch(e) {\n            dispatch({ type: 'DELETE_CONTACT', payload: id })\n        }\n    }\n\n    render () {\n        const { id, name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return(\n                        <div className='card card-body mb-3'>\n                            <h4>{name} <i onClick={() => {\n                                this.setState({\n                                    showContactInfo: !this.state.showContactInfo\n                                })\n                            }\n                            } className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }}></i>\n                                <i className=\"fas fa-times\"\n                                    style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                                ></i>\n                                <Link to={`contact/edit/${id}`}>\n                                 <i \n                                 className=\"fas fa-pencil-alt\"\n                                 style={{cursor:'pointer',\n                                        float:'right',\n                                        color: 'black',\n                                        marginRight: '1rem'\n                                     }}\n                                 ></i>\n                                </Link>\n                            </h4>\n                            {showContactInfo ? (<ul className='list-group'>\n                                <li className='list-group-item'>Email: {email}</li>\n                                <li className='list-group-item'>Phone: {phone}</li>\n                            </ul>) : null}\n\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;","import React, { Component } from 'react'\nimport Contact from './Contact';\nimport {Consumer} from '../../Context';\n\nclass Contacts extends Component {\n\n\n  render() {\n\n    return(\n        <Consumer>\n            {value => {\n                const { contacts } = value;\n                return(\n                    <>\n                    <h1 className=\"display-4 mb-2\">\n                            <span className='text-danger'>Contact</span>List\n                        </h1>\n                        {contacts.map(contact => (\n                            <Contact\n                                key={contact.id}\n                                contact={contact}\n                            />\n                        ))}\n                    </>\n                )\n            }}\n        </Consumer>\n    )\n  }\n}\n\nexport default Contacts;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n    const { branding } = props;\n  return (\n    <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'> \n        <div className=\"container\">\n            <a href='/' className='navbar-brand'>\n                {branding}\n            </a>\n            <div>\n                <ul className=\"navbar-nav mr-auto\">\n\n                    <li className=\"nav-item\">\n                        <Link to='/' className='nav-link'>\n                              <i className=\"fas fa-home\"></i>\n                        Home</Link>\n                    </li>\n\n                      <li className=\"nav-item\">\n            \n                          <Link to='/contact/add' className='nav-link'>\n                              <i className=\"fas fa-plus\"></i>\n                          Add</Link>\n                      </li>\n\n                      <li className=\"nav-item\">\n                          <Link to='/about' className='nav-link'>\n                              <i className=\"fas fa-question\"></i>\n                          About</Link>\n                      </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n    branding: 'My app'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames';\n\nconst TextInputGroup = ({ label, name, value, placeholder, type, onChange, error }) => {\n  return (\n    <div>\n              <div className='form-group'>\n              <label htmlFor={name}>{label}</label>\n              <input\n                  type={type}\n                  name={name}\n                  className={classNames('form-control form-control-lg', {\n                      'is-invalid': error\n                  })}\n                  placeholder={placeholder}\n                  value={value}\n                  onChange={onChange}\n              />\n              {error && <div className='invalid-feedback'>{error}</div>}\n          </div>\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react'\nimport { Consumer } from '../../Context';\nimport TextInputGroup from '../Layout/TextInputGroup/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n        \n        // Check For Errors.\n        if (name === '') {\n            this.setState({errors: { name: 'Name is required'}})\n            return;\n        }\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required' } })\n            return;\n        }\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required' } })\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone,\n        }\n\n        const response = await axios.post('http://jsonplaceholder.typicode.com/users', newContact);\n              dispatch({ type: 'ADD_CONTACT', payload: response.data })\n\n        this.setState({ name: '', email: '', phone: '', errors: {}})\n\n        this.props.history.push('/');\n    }\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n              {value => {\n                  const { dispatch } = value;\n                  return (\n                      <div className='card mb-3'>\n                          <div className=\"card-header\">Add Contact</div>\n                          <div className='card-body'>\n                              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\n                                  <TextInputGroup\n                                     label='Name'\n                                     name='name'\n                                     placeholder='Enter Name'\n                                     value={name}\n                                     onChange={this.onChange}\n                                     error={errors.name}\n                                   />\n\n                                  <TextInputGroup\n                                      label='Email'\n                                      name='email'\n                                      type='text'\n                                      placeholder='Enter Email'\n                                      value={email}\n                                      onChange={this.onChange}\n                                      error={errors.email}\n                                  />\n\n                                  <TextInputGroup\n                                      label='Phone'\n                                      name='phone'\n                                      placeholder='Enter Phone'\n                                      value={phone}\n                                      onChange={this.onChange}\n                                      error={errors.phone}\n                                  />\n\n                                  <input\n                                      type='submit'\n                                      value='Add Contact'\n                                      className='btn btn-block'\n                                  />\n\n                              </form>\n                          </div>\n                      </div>\n                  )\n              }}\n            </Consumer>\n        )\n}\n}\n\nexport default AddContact;","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className='display-4'>About Contact Manager</h1>\n      <p className='lead'>Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react'\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className='display-4'><span className='text-danger'>404</span>Page Not Found</h1>\n      <p className=\"lead\">Sorry that page does not exist.</p>\n    </div>\n  )\n}\n\nexport default NotFound;","import React, { Component } from 'react'\n\nclass Test extends Component {\n    state = {\n        title: '',\n        body: ''\n    }\n    componentDidMount () {\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(response => response.json())\n            .then(data => this.setState({title: data.title, body: data.body}))\n    }\n\n    // componentWillMount() {\n    //     console.log('componentWillMount...')\n    // }\n\n    // componentDidUpdate() {\n    //     console.log('componentDidUpdate...')\n    // }\n\n\n    // componentWillUpdate() {\n    //     console.log('componentWillUpdate...')\n    // }\n    \n    // componentWillReceiveProps(nextProps, nextState) {\n    //     console.log('ComponentWillReceiveProps')\n    // }\n\n    // static getDerivedStateFromProps(nextProps, prevState) {\n    //     return {\n    //         test: 'something'\n    //     };\n    // }\n\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\n    //     console.log('getSnapshotBeforeUpdate...')\n    // }\n\n  render() {\n      const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <h2>{body}</h2>\n      </div>\n    )\n  }\n}\n\nexport default Test;","import React, { Component } from 'react'\nimport { Consumer } from '../../Context';\nimport TextInputGroup from '../Layout/TextInputGroup/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const response = await axios.get(`http://jsonplaceholder.typicode.com/users/${id}`)\n        const contact = response.data;\n        this.setState({ \n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone \n        })\n    }\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        // Check For Errors.\n        if (name === '') {\n            this.setState({ errors: { name: 'Name is required' } })\n            return;\n        }\n        if (email === '') {\n            this.setState({ errors: { email: 'Email is required' } })\n            return;\n        }\n        if (phone === '') {\n            this.setState({ errors: { phone: 'Phone is required' } })\n            return;\n        }\n\n        const updateContact = {\n            name,\n            email,\n            phone\n        };\n        const { id } = this.props.match.params;\n        const response = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n        dispatch({ type: 'UPDATE_CONTACT', payload: response.data});\n\n        this.setState({ name: '', email: '', phone: '', errors: {} })\n\n        this.props.history.push('/');\n    }\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className='card mb-3'>\n                            <div className=\"card-header\">Edit Contact</div>\n                            <div className='card-body'>\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n\n                                    <TextInputGroup\n                                        label='Name'\n                                        name='name'\n                                        placeholder='Enter Name'\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n\n                                    <TextInputGroup\n                                        label='Email'\n                                        name='email'\n                                        type='text'\n                                        placeholder='Enter Email'\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n\n                                    <TextInputGroup\n                                        label='Phone'\n                                        name='phone'\n                                        placeholder='Enter Phone'\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n\n                                    <input\n                                        type='submit'\n                                        value='Update Contact'\n                                        className='btn btn-block'\n                                    />\n\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default EditContact;","import React, { Component } from 'react';\nimport './App.css';\nimport Contacts from './components/Contact/Contacts';\nimport Header from './components/Layout/Header/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport  Provider  from './Context';\nimport AddContact from './components/Contact/AddContact';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './components/Pages/About/About';\nimport NotFound from './components/Pages/NotFound/NotFound';\nimport Test from './components/test/test';\nimport EditContact from './components/Contact/EditContact';\n\nclass App extends Component {\n  render() { \n    return (\n        <Provider>\n          <Router>\n           <div className=\"App\">\n           <Header branding='Contact Manager' />\n           <div className='container'>\n            <Switch>\n                <Route exact path='/' component={Contacts} />\n                <Route exact path='/contact/add' component={AddContact} />\n                <Route exact path='/contact/edit/:id' component={EditContact} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/test' component={Test} />\n                <Route component={NotFound} />\n            </Switch>\n           </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}